#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —É—Å–ª—É–≥
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.database import db

async def test_photos():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —É—Å–ª—É–≥"""
    print("üì∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ —É—Å–ª—É–≥...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db._create_tables()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Å–ª—É–≥–∏
        services = await db.get_all_services()
        print(f"üìã –í—Å–µ–≥–æ —É—Å–ª—É–≥: {len(services)}")
        
        for service in services:
            print(f"\nüíÜ‚Äç‚ôÄÔ∏è –£—Å–ª—É–≥–∞: {service[1]}")
            print(f"   ID: {service[0]}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {service[2]}")
            print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {service[3]} –º–∏–Ω")
            print(f"   –¶–µ–Ω–∞: {service[4]}‚ÇΩ")
            print(f"   –§–æ—Ç–æ: {service[5] if len(service) > 5 else '–ù–µ—Ç'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            if len(service) > 5 and service[5]:
                if os.path.exists(service[5]):
                    print(f"   ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {service[5]}")
                    file_size = os.path.getsize(service[5])
                    print(f"   üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
                else:
                    print(f"   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {service[5]}")
            else:
                print("   üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_photos()) 