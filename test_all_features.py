#!/usr/bin/env python3
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.database import db
from config import ADMIN_ID

async def test_all_features():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db._create_tables()
        
        print("\nüìä === –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ ===")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏
        services = await db.get_all_services()
        print(f"üíÜ‚Äç‚ôÄÔ∏è –£—Å–ª—É–≥: {len(services)}")
        for service in services:
            photo_status = "üì∏" if len(service) > 5 and service[5] else "üì∑"
            print(f"   {photo_status} {service[1]} - {service[4]}‚ÇΩ ({service[3]} –º–∏–Ω)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏
        appointments = await db.get_all_appointments()
        print(f"\nüìã –ó–∞–ø–∏—Å–µ–π: {len(appointments)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç—ã
        slots = await db.get_all_slots()
        print(f"üìÖ –°–ª–æ—Ç–æ–≤: {len(slots)}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        user_appointments = {}
        for apt in appointments:
            user_id = apt[1]
            if user_id not in user_appointments:
                user_appointments[user_id] = []
            user_appointments[apt[1]].append(apt)
        
        print(f"\nüë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_appointments)}")
        for user_id, user_apts in user_appointments.items():
            print(f"   üÜî {user_id}: {len(user_apts)} –∑–∞–ø–∏—Å–µ–π")
        
        print(f"\nüëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {ADMIN_ID}")
        
        print("\n‚úÖ === –§–£–ù–ö–¶–ò–ò –ì–û–¢–û–í–´ ===")
        print("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É")
        print("üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É—Å–ª—É–≥")
        print("üì± –ö–æ–º–∞–Ω–¥—ã /help, /my_bookings, /cancel_booking")
        print("‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
        print("üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞")
        print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        
        print("\nüéØ === –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ ===")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_all_features()) 