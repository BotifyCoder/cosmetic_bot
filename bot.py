import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.types import BotCommand, BotCommandScopeChat
from config import BOT_TOKEN, ADMIN_ID
from handlers import user_handlers, admin_handlers
from services.scheduler import start_scheduler
from services.database import db
from services.rate_limiter import cleanup_task

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

async def setup_bot_commands(bot: Bot):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await bot.set_my_commands([
        BotCommand(command="start", description="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="help", description="‚ùì –ü–æ–º–æ—â—å"),
    ])
    
    # –ö–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
    await bot.set_my_commands([
        BotCommand(command="start", description="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="help", description="‚ùì –ü–æ–º–æ—â—å"),
        BotCommand(command="admin", description="üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
    ], scope=BotCommandScopeChat(chat_id=ADMIN_ID))
    
    print("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")

async def main():
    await db._create_tables()  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü
    if not BOT_TOKEN:
        raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    bot = Bot(
        token=BOT_TOKEN,
        default=DefaultBotProperties(parse_mode="HTML")
    )
    
    # –û—á–∏—â–∞–µ–º webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∫–æ–ø–∏–≤—à–∏—Ö—Å—è –∫–æ–º–∞–Ω–¥
    await bot.delete_webhook(drop_pending_updates=True)
    print("üßπ Webhook –æ—á–∏—â–µ–Ω, –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    await setup_bot_commands(bot)
    
    dp = Dispatcher(storage=MemoryStorage())
    dp.include_router(user_handlers.router)
    dp.include_router(admin_handlers.router)
    start_scheduler(bot)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –æ—á–∏—Å—Ç–∫–∏ –≤ —Ñ–æ–Ω–µ
    asyncio.create_task(cleanup_task())
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç —Å–ø–∞–º–∞...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
