#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–∏—Å—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —ç–º–æ–¥–∑–∏
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.database import db

async def test_clean_ui():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á–∏—Å—Ç—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–µ–∑ –ª–∏—à–Ω–∏—Ö —ç–º–æ–¥–∑–∏"""
    print("üßπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db._create_tables()
        
        print("\nüìä === –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ò–ù–¢–ï–†–§–ï–ô–° ===")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª—É–≥–∏
        services = await db.get_all_services()
        print(f"–£—Å–ª—É–≥: {len(services)}")
        for service in services:
            print(f"   {service[1]} - {service[4]}‚ÇΩ ({service[3]} –º–∏–Ω)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏
        appointments = await db.get_all_appointments()
        print(f"\n–ó–∞–ø–∏—Å–µ–π: {len(appointments)}")
        
        if appointments:
            print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
            for apt in appointments[-2:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2
                print(f"   {apt[2]} - {apt[3]} {apt[4]} - {apt[5]}")
        
        print("\n‚úÖ === –ò–ù–¢–ï–†–§–ï–ô–° –û–ë–ù–û–í–õ–ï–ù ===")
        print("‚úì –£–±—Ä–∞–Ω—ã –ª–∏—à–Ω–∏–µ —ç–º–æ–¥–∑–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫")
        print("‚úì –û—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω–∞ –∏ –≤—Ä–µ–º—è")
        print("‚úì –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —ç–º–æ–¥–∑–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (üîô)")
        print("‚úì –ß–∏—Å—Ç—ã–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥")
        
        print("\nüéØ === –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ ===")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_clean_ui()) 